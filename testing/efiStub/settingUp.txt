1. Make sure your kernel has EFI stub support

Most Debian kernels (linux-image-amd64) already have EFI stub enabled. You can confirm after installing the kernel:

grep EFI_STUB /boot/config-$(uname -r)


You should see:

CONFIG_EFI_STUB=y


If yes â†’ no need to recompile.

2. Install the kernel and initramfs

Inside your chroot:

apt install linux-image-amd64 initramfs-tools efibootmgr


This gives you /boot/vmlinuz-* and /boot/initrd.img-*.

3. Mount EFI System Partition (ESP)

On EFI systems, the ESP is usually /boot/efi:

mkdir -p /boot/efi
mount /dev/sdX1 /boot/efi   # replace with your ESP partition

4. Copy kernel + initramfs into the ESP

EFI firmware loads .efi executables directly.
Weâ€™ll copy the kernel (vmlinuz) and initramfs into EFI/debian/.

Example:

mkdir -p /boot/efi/EFI/debian
cp /boot/vmlinuz-*-amd64 /boot/efi/EFI/debian/vmlinuz.efi
cp /boot/initrd.img-*-amd64 /boot/efi/EFI/debian/initrd.img


(You can keep version suffixes if you prefer, but shorter names help with boot entries.)

5. Create EFI boot entry with efibootmgr

Tell firmware to boot the kernel with root=...:

efibootmgr \
  --create \
  --disk /dev/sdX \          # disk with EFI partition
  --part 1 \                 # partition number of ESP
  --label "Debian EFI Stub" \
  --loader '\EFI\debian\vmlinuz.efi' \
  --unicode 'root=UUID=<your-root-uuid> initrd=\EFI\debian\initrd.img rw'


ðŸ‘‰ Get your root UUID with:

blkid -s UUID -o value /dev/sdXY   # replace with root partition

6. Verify boot entries
efibootmgr -v


You should see the new Debian entry with correct kernel + initrd.

==================================================================================================

efibootmgr \
  --create \
  --disk /dev/vda \
  --part 1 \
  --label "Debian EFI Stub" \
  --loader '\EFI\debian\vmlinuz.efi' \
  --unicode 'root=UUID=<uuid-of-vda2> ro rootflags=subvol=@ initrd=\EFI\debian\initrd.img'

========================================================================================================

Example of working command.

working entry on vm

efibootmgr --create --disk /dev/vda --part 1 --label "Debian EFI Stub" --loader '\EFI\debian\vmlinuz.efi' --unicode 'root=UUID=cb6a569c-04c8-4096-92e3-1a1eae0de169 ro rootflags=subvol=@ initrd=\EFI\debian\initrd.img'

the above entry with ubuntu still logo custom kernel parameters

efibootmgr --create --disk /dev/vda --part 1 --label "Debian EFI Stub" --loader '\EFI\debian\vmlinuz.efi' --unicode 'root=UUID=cb6a569c-04c8-4096-92e3-1a1eae0de169 ro rootflags=subvol=@ video=efifb:off quiet splash initrd=\EFI\debian\initrd.img'

the above entry with kvm custom kernel parameters

efibootmgr --create --disk /dev/vda --part 1 --label "Debian EFI Stub" --loader '\EFI\debian\vmlinuz.efi' --unicode 'root=UUID=cb6a569c-04c8-4096-92e3-1a1eae0de169 ro rootflags=subvol=@ intel_iommu=on iommu=pt video=efifb:off initrd=\EFI\debian\initrd.img'

this is fallback kernel entry with kvm custom kernel parameters to boot into previous kernal

efibootmgr --create --disk /dev/vda --part 1 --label "Debian EFI Stub Old" --loader '\EFI\debian\vmlinuzOld.efi' --unicode 'root=UUID=cb6a569c-04c8-4096-92e3-1a1eae0de169 ro rootflags=subvol=@ intel_iommu=on iommu=pt video=efifb:off initrd=\EFI\debian\initrdOld.img'

=========================================================================================================

How to setup UEFI shell for troubleshoot

Download the latest version of shellx64.efi from link

https://github.com/pbatard/UEFI-Shell/releases

then make directory in EFI folder name tools

copy the file and paste into directory '/EFI/tools/'

then create boot entry with efibootmgr

efibootmgr -c -d /dev/nvme1n1 -p 1 -L "UEFI Shell" -l '\EFI\tools\shellx64.efi'

===========================================================================================================

Managing entries

List current UEFI entries:

efibootmgr


Delete an entry (e.g. Boot0007):

efibootmgr -b 0007 -B


Change boot order (e.g. Boot0003 first):

efibootmgr -o 0003,0001

==============================================================================================================

Make UEFI-shell full screen

Shell> mode

This shows available text modes

col 80  row 25
col 80  row 50
col 100  row 31
col 240  row 56

so to set highest resolutions, like col 240  row 56, type

Shell> mode 240 56

=================================================================================================================

To get the device and drive in UEFI-shell type

map -r

========================================================================================================================
